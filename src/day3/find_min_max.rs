// ========================================
// 과제 3: 참조 규칙 이해하기 (25분)
// ========================================
// 벡터에서 최댓값과 최솟값을 찾아 반환하는 함수를 작성하세요.
//
// 요구사항:
// - 함수는 Vec<i32>의 참조(&Vec<i32>)를 받습니다
// - 최댓값과 최솟값을 튜플로 반환합니다: (min, max)
// - 벡터가 비어있으면 (0, 0)을 반환합니다
// - 원본 벡터는 수정하지 않습니다
// - main에서 벡터를 함수에 넘긴 후에도 계속 사용할 수 있어야 합니다
//
// 힌트:
// - vec.is_empty()로 빈 벡터인지 확인할 수 있습니다
// - vec[0]으로 첫 번째 요소에 접근할 수 있습니다
// - for 루프로 벡터를 순회하면서 최댓값과 최솟값을 추적하세요

pub fn find_min_max(numbers: &Vec<i32>) -> (i32, i32) {
    // TODO: 여기에 코드를 작성하세요
    (0, 0)
}

pub fn run() {
    println!("=== 과제 3: 참조 규칙 이해하기 ===");
    let numbers = vec![5, 2, 8, 1, 9, 3, 7];
    // TODO: find_min_max 함수를 호출하고 결과를 출력하세요
    // 함수 호출 후 numbers를 다시 사용해서 원본이 유지되는지 확인하세요
}
