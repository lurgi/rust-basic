// ========================================
// 과제 3: 벡터 필터링 (25분)
// ========================================
// 정수 벡터를 받아서 짝수만 포함하는 새로운 벡터를 반환하는 함수를 작성하세요.
//
// 요구사항:
// - 함수는 Vec<i32>를 매개변수로 받습니다
// - 짝수만 포함하는 새로운 Vec<i32>를 반환합니다
// - 원본 벡터의 소유권은 함수로 이동합니다
// - main에서 결과를 출력합니다
//
// 힌트:
// - 새로운 빈 벡터를 만들려면: let mut result = Vec::new();
// - 벡터에 요소를 추가하려면: result.push(value);
// - for 루프로 벡터를 순회할 수 있습니다

pub fn filter_even_numbers(numbers: Vec<i32>) -> Vec<i32> {
    // TODO: 여기에 코드를 작성하세요
    let result = Vec::new();
    result
}

pub fn run() {
    println!("=== 과제 3: 벡터 필터링 ===");
    let numbers = vec![1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    // TODO: filter_even_numbers 함수를 호출하고 결과를 출력하세요
    // 힌트: 벡터 출력은 {:?} 포맷을 사용합니다
}
